# Generated by Django 4.1.7 on 2023-04-27 18:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code_3', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^\\w{3}$', 'Must be exactly 3 characters')])),
                ('name', models.CharField(default='no_name', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participation', models.FloatField(help_text='percentage share acquired')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code_3', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^\\w{3}$', 'Must be exactly 3 characters')])),
                ('name', models.CharField(default='no_name', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upfront_brokerage', models.FloatField()),
                ('upfront_commission', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Premium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upfront_premium', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ExcessOfLoss',
            fields=[
                ('coverage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='insurance_contract.coverage')),
                ('risk_retention', models.FloatField(null=True)),
                ('risk_limit', models.FloatField(null=True)),
                ('event_retention', models.FloatField(null=True)),
                ('event_limit', models.FloatField(null=True)),
                ('aggregate_retention', models.FloatField(null=True)),
                ('aggregate_limit', models.FloatField(null=True)),
                ('reinstatements', models.JSONField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('insurance_contract.coverage',),
        ),
        migrations.CreateModel(
            name='QuotaShare',
            fields=[
                ('coverage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='insurance_contract.coverage')),
                ('share', models.FloatField(default=1)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('insurance_contract.coverage',),
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('contracts', models.JSONField()),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.currency')),
                ('insured', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.company')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.coverage')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.currency')),
                ('expenses', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.expenses')),
                ('premium', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.premium')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance_contract.country'),
        ),
        migrations.AddConstraint(
            model_name='company',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_lower_company_name'),
        ),
    ]
